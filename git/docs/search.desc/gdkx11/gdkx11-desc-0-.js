searchState.loadedDescShard("gdkx11", 0, "Rust GDKX11 bindings\nImplements\nImplements\nImplements\nImplements\nProperties\nProperties\nImplements\nImplements\nImplements\nImplements\nImplements\nImplements\nSignals\nImplements\nImplements\nCreates a new builder-pattern struct instance to construct …\nCreates a new builder-pattern struct instance to construct …\nBuilder pattern types.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nMakes a clone of this shared reference.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nComparison for two GObjects.\nReturns the current workspace for <code>self</code> when running under a\nGets the number of the workspace <code>self</code> is on.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nEquality for two GObjects.\nPops the error trap pushed by <code>error_trap_push()</code>. Will …\nPops the error trap pushed by <code>error_trap_push()</code>. Does not …\nBegins a range of X requests on <code>self</code> for which X error …\nWraps a native window in a <code>gdk::Window</code>. The function will …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieves the version of the GLX implementation.\nCall XGrabServer() on <code>self</code>. To ungrab the display again, …\nExtracts the group from the state field sent in an X Key …\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nHashes the memory address of this object.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines whether a particular key code represents a key …\nLooks up the <code>gdk::Window</code> that wraps the given native …\nLooks up the <code>gdk::Visual</code> for a particular screen and X …\nGets the XID of the specified output/monitor. If the X …\nMoves the window to the correct workspace when running …\nMoves the window to the given workspace when running unde a\nReturns the number of workspaces for <code>self</code> when running …\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nPartial comparison for two GObjects.\nReturns the index of a <code>gdk::Screen</code>.\nSets the cursor theme from which the images for cursor …\nThis function can be used to disable frame synchronization …\nSet a hint for the window manager, requesting that the …\nSets the startup notification ID for a display.\nGTK+ applications can request a dark theme variant. In …\nThe application can use this call to update the _…\nThis function modifies or removes an arbitrary X11 window …\nForces a specific window scale for all windows on this …\nGets the startup notification ID for a display.\nConvert a string from the encoding of the current locale …\nThis function is specific to the X11 backend of GDK, and …\nUngrab <code>self</code> after it has been grabbed with <code>grab()</code>.\nReturns the timestamp of the last user interaction on <code>self</code>…\nConverts from UTF-8 to compound text.\nReturns the name of the window manager for <code>self</code>.\nConverts from a <code>gdk::Atom</code> to the X atom for the default …\nConverts from a <code>gdk::Atom</code> to the X atom for a <code>gdk::Display</code> …\nReturns the device ID as seen by XInput2.\nReturns the <code>gdk::Device</code> that wraps the given device ID.\nGets the root window of the default screen (see …\nGets the default GTK+ screen number.\nRoutine to get the current X server time stamp.\nReturns the X atom for GDK’s default display …\nReturns the X atom for a <code>gdk::Display</code> corresponding to …\nReturns the name of an X atom for GDK’s default display. …\nReturns the name of an X atom for its display. This …\nCall <code>X11Display::grab()</code> on the default display. To ungrab …\nRegisters interest in receiving extension events with type …\nSets the <code>SM_CLIENT_ID</code> property on the application’s …\nUngrab the default display after it has been grabbed with …\nConvert from an X atom for the default display to the …\nConvert from an X atom for a <code>gdk::Display</code> to the …\nReturns the X cursor belonging to a <code>gdk::Cursor</code>.\nReturns the X resource (window) belonging to a <code>gdk::Window</code>.\nA builder-pattern type to construct <code>X11DeviceManagerXI2</code> …\nA builder-pattern type to construct <code>X11DeviceXI2</code> objects.\nBuild the <code>X11DeviceManagerXI2</code>.\nBuild the <code>X11DeviceXI2</code>.\nThe <code>gdk::DeviceManager</code> the <code>gdk::Device</code> pertains to.\nThe <code>gdk::Display</code> the <code>gdk::Device</code> pertains to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether the device is represented by a cursor on the …\nSource type for the device.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe device name.\nThe maximal number of concurrent touches on a touch device.\nProduct ID of this device, see […\n<code>gdk::Seat</code> of this device.\nVendor ID of this device, see [<code>DeviceExtManual::vendor_id()</code>…")